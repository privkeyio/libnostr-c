/**
 * @file nostr_features.h
 * @brief libnostr-c Feature Detection Header (Auto-generated)
 * 
 * This file is automatically generated by CMake based on the enabled
 * features and available dependencies. Do not edit manually.
 * 
 * Feature flags for modular compilation:
 * - Enables conditional compilation of NIPs and optional features
 * - Allows runtime detection of available functionality
 * - Reduces binary size by excluding unused features
 */

#ifndef NOSTR_FEATURES_H
#define NOSTR_FEATURES_H

#ifdef __cplusplus
extern "C" {
#endif

/* =============================================================================
 * Core Features (Always Enabled)
 * ============================================================================= */

#define NOSTR_FEATURE_STD 1
#define NOSTR_FEATURE_EVENTS 1  
#define NOSTR_FEATURE_KEYS 1
#define NOSTR_FEATURE_ENCODING @NOSTR_FEATURE_ENCODING@

/* =============================================================================
 * NIP Features (Optional)
 * ============================================================================= */

#cmakedefine NOSTR_FEATURE_NIP04
#cmakedefine NOSTR_FEATURE_NIP13
#cmakedefine NOSTR_FEATURE_NIP17
#cmakedefine NOSTR_FEATURE_NIP44
#cmakedefine NOSTR_FEATURE_NIP47
#cmakedefine NOSTR_FEATURE_NIP57
#cmakedefine NOSTR_FEATURE_NIP59

/* =============================================================================
 * Optional Enhancements
 * ============================================================================= */

#cmakedefine NOSTR_FEATURE_RELAY
#cmakedefine NOSTR_FEATURE_HD_KEYS
#cmakedefine NOSTR_FEATURE_JSON_ENHANCED
#cmakedefine NOSTR_FEATURE_THREADING

/* =============================================================================
 * Cryptography Backend Detection
 * ============================================================================= */

#cmakedefine NOSTR_FEATURE_CRYPTO_NOSCRYPT
#cmakedefine NOSTR_FEATURE_CRYPTO_SECP256K1

/* =============================================================================
 * Dependency Availability
 * ============================================================================= */

#cmakedefine HAVE_NOSCRYPT
#cmakedefine HAVE_SECP256K1
#cmakedefine HAVE_CJSON
#cmakedefine HAVE_LIBWEBSOCKETS
#cmakedefine HAVE_SCHNORRSIG_SIGN32

/* =============================================================================
 * Runtime Feature Detection Functions
 * ============================================================================= */

/**
 * @brief Check if a specific NIP is supported at runtime
 * @param nip_number The NIP number to check (e.g., 4, 13, 17, etc.)
 * @return 1 if supported, 0 if not supported
 */
int nostr_feature_nip_supported(int nip_number);

/**
 * @brief Check if relay functionality is available
 * @return 1 if relay features are available, 0 otherwise
 */
int nostr_feature_relay_available(void);

/**
 * @brief Check if HD key derivation is available
 * @return 1 if HD key features are available, 0 otherwise  
 */
int nostr_feature_hd_keys_available(void);

/**
 * @brief Check if enhanced JSON handling is available
 * @return 1 if enhanced JSON features are available, 0 otherwise
 */
int nostr_feature_json_enhanced_available(void);

/**
 * @brief Get a string listing all enabled features
 * @return Static string with comma-separated list of enabled features
 */
const char* nostr_feature_list_enabled(void);

/**
 * @brief Get cryptography backend information
 * @return Static string describing the active crypto backend
 */
const char* nostr_feature_crypto_backend_info(void);

#ifdef __cplusplus
}
#endif

#endif /* NOSTR_FEATURES_H */